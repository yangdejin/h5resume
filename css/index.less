@import "reset.min.less";
@import (reference) 'common.less';

html{
  font-size: 100px;/*640设计稿尺寸中1rem=100px*/
}
html,body{
  height: 100%;
  overflow: hidden;
  background: #f4f4f4;
  position: relative;
  z-index: -4;
}
.mainBox{
  margin:0 auto;
  max-width: 640px;/*这里不用改rem*/
  height:100%;
  background: #ffffff;
  position: relative;
  z-index: -3;
}
.loadingBox,.phoneBox,.messageBox,.cubeBox,.detailBox{
  display: none;
  position: relative;
  height: 100%;
  overflow: hidden;
}
.loadingBox{
  background: #000000;
  .title{
    height: 1.4rem;
    position: absolute;
    left: 0;
    top:50%;
    margin-top:-2.2rem;/*-0.7（正中间）+1.5（距离中间靠上的位移）*/
    height: 1.4rem;
    width: 100%;/*position后要加宽,要不然h1中的文字不居中*/
    color:#ffffff;
    h1{
      line-height: .75rem;
      font-size: .5rem;
      text-align: center;
    }
    h2{
      margin-top: .2rem;
      line-height: .45rem;
      text-align: center;
      letter-spacing: .04rem;
    }
  }
  .progress{
    position: absolute;
    top: 50%;
    left: 50%;
    margin:.85rem 0 0 -2.3rem;
    width: 4.6rem;
    height: .3rem;
    background: #ffffff;
    .current{
      position: absolute;
      top:0;
      left:0;
      width:0;
      height: 100%;
      background: -webkit-linear-gradient(left bottom ,#5cb85c 0%,#5cb85c 25%,#74c274 25%,#74c274 50%,#5cb85c 50%,#5cb85c 75%,#74c274 75%,#74c274 100%);
      background: linear-gradient(left bottom ,#5cb85c 0%,#5cb85c 25%,#74c274 25%,#74c274 50%,#5cb85c 50%,#5cb85c 75%,#74c274 75%,#74c274 100%);
      background-size: .3rem .3rem;/*背景图大小*/
      animation:loadingMove .3s linear 1s infinite both;
      /*给current设置一个过渡动画：当我在js中控制它的宽度在变得时候给其一个平稳的过渡动画效果（而不是生硬的改变）*/
      transition: .3s;
    }
  }
}

@keyframes loadingMove{
  0%{
    background-position:0 0 ;
  }
  100%{
    background-position: 0 -.3rem;
  }
}

/*phone*/
.phoneBox{
  background: url("../img/zf_phoneBg.jpg") no-repeat;
  background-size: cover;
  z-index: -2;
  h2{
    margin-top: .5rem;
    text-align: center;
    img{
      display: inline-block;
      width: 2.62rem;
      height: 1.25rem;
    }
    span{
      display: none;
      margin-top:.1rem;
      line-height: .3rem;
      line-height: .3rem;
      font-size: .3rem;
      color: #ffffff;
      letter-spacing: .05rem;
    }
  }
  .answer{
    position: absolute;
    width: 5.2rem;
    height: 3.6rem;
    left:50%;
    bottom:.3rem;
    margin-left:-2.6rem;
    background: url("../img/zf_phoneListen.png") no-repeat;
    background-size: 100% 100%;
    .markMove{
      position: absolute;
      right:-.06rem;
      bottom:.48rem;
      box-sizing: border-box;
      width: 1.6rem;
      height:1.6rem;
      border-radius: 50%;
      border:.03rem solid #0f0;
      animation: answerMove 1s linear infinite both;
      z-index: -1;
    }
    .markLink{
      .markMove;
      z-index: 1;
      animation: none;
      border:none;
      border-radius: 0;
    }
  }
  .hang{
    position: absolute;
    bottom:.3rem;
    left: 50%;
    margin-left: -2.6rem;
    width: 5.2rem;
    height: 6.59rem;
    background:url('../img/zf_phoneDetail.png') no-repeat;
    background-size: 100% 100%;

    //初始位置在phone底部（看不见：溢出内容隐藏），当点击接听按钮后，控制它从底下出来即可（js中改变样式）
    transform: translateY(6.89rem);/*下移6.89rem*/
    transition:.3s;
    .markLink{
      position: absolute;
      width: 1.6rem;
      height: 1.6rem;
      left:50%;
      bottom:.26rem;
      margin-left: -.8rem;
      z-index: 1;

    }
  }
}
@keyframes answerMove{
  from{
    transform:scale(0);
  }
  to{
    transform:scale(1.1);
  }
}

/*message*/
.messageBox{
  background: #eaeaea;
  .wrapper{
    position: absolute;
    top:.2rem;
    left: 0;
    width:100%;
    transition:.3s;
    li{
      position:relative;
      max-width: 3.6rem;
      padding:.25rem;
      margin-bottom: .4rem;
      border-radius:.1rem;
      font-size: .26rem;
      line-height: .4rem;
      width: 100%;
      opacity: 0;
      &.active{
        animation:messageListMove 0.5s linear both;
      }
      .arrow{
        position:absolute;
        top:.2rem;
        width: .1rem;
        height: .2rem;

      }
      .pic{
        position:absolute;
        top:0;
        width:.82rem;
        height:.82rem;
        border-radius: 50%;
      }
      &.self{
        float: left;
        margin-left: 1.25rem;
        background: #ffffff;
        border:.02rem solid #cacaca;

        .pic{
          left:-1rem
        }
        .arrow{
          left:-.1rem;
          background: url('../img/zf_messageArrow1.png') no-repeat;
          background-size: 100% 100%;
        }

      }
      &.inter{
        float: right;
        margin-right: 1.25rem;
        background: #a2e45c;
        border:.02rem solid #96b474;

        .pic{
          right:-1rem
        }

        .arrow{
          right:-.1rem;
          background: url('../img/zf_messageArrow2.png') no-repeat;
          background-size: 100% 100%
        }
      }
    };

  }
  .keyBoard{

    position:absolute;
    left:0;
    bottom:-.5rem;

    box-sizing: border-box;
    width:100%;
    height: 5.16rem;
    background: url('../img/zf_messageKeyboard.png') no-repeat;
    background-size: 100% 100%;
    /*初始位置*/
    transform: translateY(3.7rem);
    transition: .3s;

    span{
      position: absolute;
      left:.9rem;
      top:.35rem;
      width: 4rem;
      height: .4rem;
      line-height: .4rem;
      font-size: .25rem;
    }
    .submit{
      display: none;
      position: absolute;
      right:.1rem;
      bottom:.6rem;
      width: 1.47rem;
      height: .74rem;
      background: url('../img/zf_messageChat.png') no-repeat;
      background-size:100% 100%;

    }

  }
}
@keyframes messageListMove {
  from{
    transform: translateY(1rem);
    opacity: 0;
  }
  to{
    transform: translateY(0rem);
    opacity: 1;
  }

}
/*cube 魔方*/
.cubeBox{
  perspective:1000px;/*3d动画需要加*/
  background: url("../img/zf_cubeBg.jpg") no-repeat center center;
  background-size: cover;
  .tip{
    position: absolute;
    bottom:.5rem;
    left:50%;
    margin-left:-1.97rem;
    width:3.94rem;
    height:.44rem;
    background: url("../img/zf_cubeTip.png") no-repeat;
    background-size: 100% 100%;
  }

  .cube{
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -2.55rem 0 0 -2.55rem;
    width: 5.1rem;
    height: 5.1rem;

    transform-style: preserve-3d;
    transform: scale(0.6) rotateX(-35deg) rotateY(35deg);
    transition: all .3s;

    /*

    -webkit-transform: scale(0.6) rotateX(-35deg) rotateY(45deg);
    transform: scale(0.6) rotateX(-35deg) rotateY(45deg);

    -webkit-transition: all .3s;
    transition: all .3s;*/
    li{
      position: absolute;
      top: 50%;
      left: 50%;
      margin: -2.55rem 0 0 -2.55rem;
      width:100%;
      height: 100%;
      &:nth-child(1){
        background: url('../img/zf_cube1.png') no-repeat;
        background-size: 100% 100%;
        transform: translateZ(2.55rem);
      }
      &:nth-child(2){
        background: url('../img/zf_cube2.png') no-repeat;
        background-size: 100% 100%;
        //transform: translateZ(-2.55rem) rotateY(180deg);/*方案1，先移动在旋转*/
        transform: rotateY(180deg) translateZ(2.55rem) ;/*方案2，先旋转在移动*/


      }
      &:nth-child(3){
        background: url('../img/zf_cube3.png') no-repeat;
        background-size: 100% 100%;
        transform: rotateY(90deg) translateZ(2.55rem) ;
      }
      &:nth-child(4){
        background: url('../img/zf_cube4.png') no-repeat;
        background-size: 100% 100%;
        transform: rotateY(-90deg) translateZ(2.55rem) ;
      }
      &:nth-child(5){
        background: url('../img/zf_cube5.png') no-repeat;
        background-size: 100% 100%;
        transform: rotateX(-90deg) translateZ(2.55rem) ;
      }
      &:nth-child(6){
        background: url('../img/zf_cube6.png') no-repeat;
        background-size: 100% 100%;
        transform: rotateX(90deg) translateZ(2.55rem) ;
      }
    }
  }
}

.detailBox{
  .swiper-container{
    width: 100%;
    height: 100%;
    overflow: hidden;
    .swiper-slide{
      position: relative;/*每一个页面中的子元素相对于自己的页面定位*/
      width:100%;
      height: 100%;
      overflow: hidden;
      &:nth-child(2){
        background: #fff9c1;
      }
      &:nth-child(3){
        background: #e45454;
      }
      &:nth-child(4){
        background: #fac471;
      }
      &:nth-child(5){
        background: #fbff18;
      }
      &:nth-child(6){
        background: #5975ff;
      }
    }
  }

  //page1
  .page1{
     dl{
       position: absolute;
       left:50%;
       top:50%;
       margin:-3.6rem -2.7rem;
       /*transform: translate(-50%,-50%);*/

       width:5.4rem;
       height: 7.2rem;
       dt,dd{
         box-sizing:border-box;
         height: .6rem;
         line-height: .6rem;
         background: #8fbb4c;
       }
       dt{
         text-align: center;
         font-size: .4rem;
         color: yellow;
       }
       dd{
         position: relative;
         border-top:.02rem dashed rgba(255,255,255,.3);
         em{
           position: absolute;
           left:.15rem;
           top:50%;
           margin-top: -.21rem;
           width: .36rem;
           height:.42rem;
           line-height: .42rem;
           text-align: center;
           font-size: .2rem;
           color: #ffffff;
           background: url('../img/zf_outline.png') no-repeat;
           background-size: 100% 100%;
         }
         a{
           position: relative;/*是因为要给a标签加*/
           display: block;
           margin-left: .66rem;
           color: #555;
           font-size: .28rem;
           text-overflow:ellipsis;
           white-space: nowrap;
           overflow: hidden;
         }
         em,a{
           z-index: 1000;/*以防makisu.js动画自动插入的span遮住span和a标签的内容*/
         }
       }

     }
  }
  .page2{
    h2{
      margin-top: .8rem;
      height: .9rem;
      line-height: .9rem;
      font-size: .6rem;
      font-weight: normal;
      text-align: center;
      opacity: 0;
    }
    img{
      position: absolute;
      top:50%;
      left: 50%;
      margin:-.5rem 0 0 -.5rem;
      width: 1rem;
      height: 1rem;
      opacity: 0;
      transition:.5s;//从中心到四周的动画我们可以基于transitions完成
      /*获取最后一个img*/
      &:nth-last-of-type(1){
        width: 1.32rem;
        height: 1.7rem;
        margin:-.85rem 0 0 -.66rem;
      }
    }
  }
  #page2{
    //page2中的动画都写在id选择器中
    h2{
      animation:bounceInLeft 1s both;
    }
    img{
      &:nth-last-of-type(1){
        animation: shake 1s both;
      }
      &:not(:nth-last-of-type(1)){//除最后一个
        opacity: 1;
        animation: tada 1s .5s infinite both;/*1s完成 .5s延迟 运动infinite次 运动完成停留在最后一帧*/

      }
      &:nth-of-type(1){
        margin-top: -2.9rem;/*-.5-2.4*/
      }
      &:nth-of-type(2){
        margin-top: -1.7rem;
        margin-left: 1.5rem;
      }
      &:nth-of-type(3){
        margin-top: .7rem;
        margin-left: 1.5rem;
      }
      &:nth-of-type(4){
        margin-top: 1.9rem;
      }
      &:nth-of-type(5){
        margin-top: .7rem;
        margin-left: -2.5rem;
      }
      &:nth-of-type(6){
        margin-top: -1.7rem;
        margin-left: -2.5rem;
      }
    }
  }
  /*
    基于swiper实现切换到哪一个页卡，让哪一个页卡中的后代元素有动画效果
    1.除了编写正常的css样式（都写在.page-x中），把需要实现动画的元素所对应的动画写在#page-x中（ie旋转器优先级高）
    2.在swiper插件中某些回调函数中（onTransitionEnd...）获取当前展示slide的索引，根据索引为其设置对应的id值，当前展示的slide有id，其余的没有id
    3.为了保证切换到这一页面的时候，元素是动画运东出来的（也就是开始啥都看不见），每个元素都是基于动画显示的（在初始样式中.page-x把所有需要运东的元素透明度都设置为0，加id后执行动画效果，在动画的最后一帧让透明度为1）
  */
}

/*animate.css动画*/
@keyframes bounceInLeft {
  from,
  60%,
  75%,
  90%,
  to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  0% {
    opacity: 0;
    -webkit-transform: translate3d(-3000px, 0, 0);
    transform: translate3d(-3000px, 0, 0);
  }

  60% {
    opacity: 1;
    -webkit-transform: translate3d(25px, 0, 0);
    transform: translate3d(25px, 0, 0);
  }

  75% {
    -webkit-transform: translate3d(-10px, 0, 0);
    transform: translate3d(-10px, 0, 0);
  }

  90% {
    -webkit-transform: translate3d(5px, 0, 0);
    transform: translate3d(5px, 0, 0);
  }

  to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@keyframes shake {
  from,
  to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  0%{
    opacity: 0;
  }
  100%{
    opacity: 1;
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    -webkit-transform: translate3d(-10px, 0, 0);
    transform: translate3d(-10px, 0, 0);
  }

  20%,
  40%,
  60%,
  80% {
    -webkit-transform: translate3d(10px, 0, 0);
    transform: translate3d(10px, 0, 0);
  }
}

@keyframes tada {
  from {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }

  10%,
  20% {
    -webkit-transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);
    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);
  }

  30%,
  50%,
  70%,
  90% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }

  40%,
  60%,
  80% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }

  to {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
}